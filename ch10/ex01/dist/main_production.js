(()=>{var t={724:(t,r)=>{const s=(t,r)=>t+r,e=t=>t*t;r.mean=t=>t.reduce(s)/t.length,r.stddev=function(t){const i=r.mean(t);return Math.sqrt(t.map(t=>t-i).map(e).reduce(s)/(t.length-1))}},800:(t,r)=>{class s{has(t){throw new Error("Abstract method")}}class e extends s{get size(){throw new Error("Abstract method")}[Symbol.iterator](){throw new Error("Abstract method")}isEmpty(){return 0===this.size}toString(){return`{${Array.from(this).join(", ")}}`}equals(t){if(!(t instanceof e))return!1;if(this.size!==t.size)return!1;for(const r of this)if(!t.has(r))return!1;return!0}}Symbol.iterator;class i extends e{insert(t){throw new Error("Abstract method")}remove(t){throw new Error("Abstract method")}add(t){for(const r of t)this.insert(r)}subtract(t){for(const r of t)this.remove(r)}intersect(t){for(const r of this)t.has(r)||this.remove(r)}}r.q=class t extends i{constructor(t){super(),this.max=t,this.n=0,this.numBytes=Math.floor(t/8)+1,this.data=new Uint8Array(this.numBytes)}_valid(t){return Number.isInteger(t)&&t>=0&&t<=this.max}_has(r,s){return 0!==(this.data[r]&t.bits[s])}has(t){if(this._valid(t)){const r=Math.floor(t/8),s=t%8;return this._has(r,s)}return!1}insert(r){if(this._valid(r)){const s=Math.floor(r/8),e=r%8;if(this._has(s,e))throw new TypeError("Invalid set element: "+r);this.data[s]|=t.bits[e],this.n++}}remove(r){if(this._valid(r)){const s=Math.floor(r/8),e=r%8;if(!this._has(s,e))throw new TypeError("Invalid set element: "+r);this.data[s]&=t.masks[e],this.n--}}get size(){return this.n}*[Symbol.iterator](){for(let t=0;t<=this.max;t++)this.has(t)&&(yield t)}},r.q.bits=new Uint8Array([1,2,4,8,16,32,64,128]),r.q.masks=new Uint8Array([-2,-3,-5,-9,-17,-33,-65,-129])}},r={};function s(e){var i=r[e];if(void 0!==i)return i.exports;var n=r[e]={exports:{}};return t[e](n,n.exports,s),n.exports}const e=s(724),i=new(0,s(800).q)(100);i.insert(10),i.insert(20),i.insert(30),e.mean([...i])})();